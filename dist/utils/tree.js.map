{"version":3,"file":"tree.js","sources":["../../src/utils/tree.js"],"sourcesContent":["import { A } from '@ember/array';\nimport { set } from '@ember/object';\nimport { isEmpty } from '@ember/utils';\n\n/* Build a tree (nested objects) from a plain array\n * using `id` and `parentId` as references for the\n * relationships. The `name` property is expected\n * for rendering. Optionally, `valueKey` can be\n * passed for `id` and `labelKey` for `name`.\n * If the model is flat, it will return a list.\n */\nexport function buildTree(model, options = {}) {\n  let tree = {};\n  let roots = A();\n\n  if (isEmpty(model)) {\n    return roots;\n  }\n\n  // Set defaults and add all nodes to tree\n  model.forEach((node) => {\n    // Alternative name for `id`\n    if (options.valueKey) {\n      set(node, 'id', node.options?.valueKey);\n    }\n\n    // Alternative name for `name`\n    if (options.labelKey) {\n      set(node, 'name', node.options?.labelKey);\n    }\n\n    // Defaults\n    set(node, 'children', A());\n    set(node, 'isChecked', node.isChecked ?? false);\n    set(node, 'isDisabled', node.isDisabled ?? false);\n    set(node, 'isExpanded', node.isExpanded ?? false);\n    set(node, 'isSelected', node.isSelected ?? false);\n    set(node, 'isVisible', node.isVisible ?? true);\n\n    tree[node.id] = node;\n  });\n\n  // Connect all children to their parent\n  model.forEach((node) => {\n    let key = options.valueKey ? node[options.valueKey] : node.id;\n    let child = tree[key];\n\n    if (isEmpty(node.parentId)) {\n      roots.pushObject(child);\n    } else {\n      let parent = tree[node.parentId];\n      parent.children.pushObject(child);\n    }\n  });\n\n  return roots;\n}\n\n// Returns a flat list of all descenents, including the root\nexport function getDescendents(tree, depth = -1) {\n  let descendents = A();\n\n  if (depth < 0) {\n    // Unlimited depth\n    tree.forEach((node) => {\n      descendents.pushObject(node);\n      descendents.pushObjects(getDescendents(node.children));\n    });\n  } else if (depth > 0) {\n    tree.forEach((node) => {\n      descendents.pushObject(node);\n      descendents.pushObjects(getDescendents(node.children, depth - 1));\n    });\n  }\n\n  return descendents;\n}\n\n// Returns a flat list of ancestors, including the child\nexport function getAncestors(tree, childNode) {\n  let ancestors = A();\n  let childId = childNode.id;\n\n  tree.forEach((node) => {\n    if (!ancestors.isAny('id', childId)) {\n      if (node.id === childId) {\n        ancestors.pushObject(node);\n      } else if (node.children?.length > 0) {\n        ancestors.pushObjects(getAncestors(node.children, childNode));\n        if (ancestors.length > 0) {\n          ancestors.pushObject(node);\n        }\n      }\n    }\n  });\n\n  return ancestors;\n}\n\n// Returns the parent of a child\nexport function getParent(list, childNode) {\n  return list.find((x) => x.children.find((y) => y.id === childNode.id));\n}\n"],"names":["buildTree","model","options","tree","roots","A","isEmpty","forEach","node","valueKey","set","labelKey","isChecked","isDisabled","isExpanded","isSelected","isVisible","id","key","child","parentId","pushObject","parent","children","getDescendents","depth","descendents","pushObjects","getAncestors","childNode","ancestors","childId","isAny","length","getParent","list","find","x","y"],"mappings":"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"}